#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TakingSubjectsLib.DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TakingSubjects")]
	public partial class TakingSubjectsProceduresDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    #endregion
		
		public TakingSubjectsProceduresDataContext() : 
				base(global::TakingSubjectsLib.Properties.Settings.Default.TakingSubjectsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TakingSubjectsProceduresDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TakingSubjectsProceduresDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TakingSubjectsProceduresDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TakingSubjectsProceduresDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedureAccessToModulesByRole")]
		public ISingleResult<StoredProcedureAccessToModulesByRoleResult> StoredProcedureAccessToModulesByRole([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId);
			return ((ISingleResult<StoredProcedureAccessToModulesByRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedureClassroomInformation")]
		public ISingleResult<StoredProcedureClassroomInformationResult> StoredProcedureClassroomInformation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> classroomId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classroomId);
			return ((ISingleResult<StoredProcedureClassroomInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedureFindSubjectByName")]
		public ISingleResult<StoredProcedureFindSubjectByNameResult> StoredProcedureFindSubjectByName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string subjectName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectName);
			return ((ISingleResult<StoredProcedureFindSubjectByNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedureGetAllSubjectsToTake")]
		public ISingleResult<StoredProcedureGetAllSubjectsToTakeResult> StoredProcedureGetAllSubjectsToTake()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<StoredProcedureGetAllSubjectsToTakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedureGetStudentInfoAboutSubjectsTakenByRut")]
		public ISingleResult<StoredProcedureGetStudentInfoAboutSubjectsTakenByRutResult> StoredProcedureGetStudentInfoAboutSubjectsTakenByRut([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string rut, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rut, roleId);
			return ((ISingleResult<StoredProcedureGetStudentInfoAboutSubjectsTakenByRutResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedureGetSubjectsTakenByUserId")]
		public ISingleResult<StoredProcedureGetSubjectsTakenByUserIdResult> StoredProcedureGetSubjectsTakenByUserId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, roleId);
			return ((ISingleResult<StoredProcedureGetSubjectsTakenByUserIdResult>)(result.ReturnValue));
		}
	}
	
	public partial class StoredProcedureAccessToModulesByRoleResult
	{
		
		private int _ROLE_ID;
		
		private int _MODU_ID;
		
		private int _OPE_ID;
		
		private string _NAME_MODU_OPE;
		
		public StoredProcedureAccessToModulesByRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_ID", DbType="Int NOT NULL")]
		public int ROLE_ID
		{
			get
			{
				return this._ROLE_ID;
			}
			set
			{
				if ((this._ROLE_ID != value))
				{
					this._ROLE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODU_ID", DbType="Int NOT NULL")]
		public int MODU_ID
		{
			get
			{
				return this._MODU_ID;
			}
			set
			{
				if ((this._MODU_ID != value))
				{
					this._MODU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPE_ID", DbType="Int NOT NULL")]
		public int OPE_ID
		{
			get
			{
				return this._OPE_ID;
			}
			set
			{
				if ((this._OPE_ID != value))
				{
					this._OPE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_MODU_OPE", DbType="VarChar(41) NOT NULL", CanBeNull=false)]
		public string NAME_MODU_OPE
		{
			get
			{
				return this._NAME_MODU_OPE;
			}
			set
			{
				if ((this._NAME_MODU_OPE != value))
				{
					this._NAME_MODU_OPE = value;
				}
			}
		}
	}
	
	public partial class StoredProcedureClassroomInformationResult
	{
		
		private string _CLASSROOM_NAME;
		
		private string _SECTION_NAME;
		
		private string _SUBJECT_NAME;
		
		public StoredProcedureClassroomInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLASSROOM_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CLASSROOM_NAME
		{
			get
			{
				return this._CLASSROOM_NAME;
			}
			set
			{
				if ((this._CLASSROOM_NAME != value))
				{
					this._CLASSROOM_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECTION_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SECTION_NAME
		{
			get
			{
				return this._SECTION_NAME;
			}
			set
			{
				if ((this._SECTION_NAME != value))
				{
					this._SECTION_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUBJECT_NAME
		{
			get
			{
				return this._SUBJECT_NAME;
			}
			set
			{
				if ((this._SUBJECT_NAME != value))
				{
					this._SUBJECT_NAME = value;
				}
			}
		}
	}
	
	public partial class StoredProcedureFindSubjectByNameResult
	{
		
		private string _SUBJECT_NAME;
		
		private string _SECTION_NAME;
		
		private string _CLASSROOM_NAME;
		
		public StoredProcedureFindSubjectByNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUBJECT_NAME
		{
			get
			{
				return this._SUBJECT_NAME;
			}
			set
			{
				if ((this._SUBJECT_NAME != value))
				{
					this._SUBJECT_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECTION_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SECTION_NAME
		{
			get
			{
				return this._SECTION_NAME;
			}
			set
			{
				if ((this._SECTION_NAME != value))
				{
					this._SECTION_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLASSROOM_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CLASSROOM_NAME
		{
			get
			{
				return this._CLASSROOM_NAME;
			}
			set
			{
				if ((this._CLASSROOM_NAME != value))
				{
					this._CLASSROOM_NAME = value;
				}
			}
		}
	}
	
	public partial class StoredProcedureGetAllSubjectsToTakeResult
	{
		
		private string _SUBJECT_NAME;
		
		private int _SECTION_ID;
		
		private string _SECTION_NAME;
		
		private int _TOTAL_REGISTERED;
		
		private string _CLASSROOM_NAME;
		
		public StoredProcedureGetAllSubjectsToTakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUBJECT_NAME
		{
			get
			{
				return this._SUBJECT_NAME;
			}
			set
			{
				if ((this._SUBJECT_NAME != value))
				{
					this._SUBJECT_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECTION_ID", DbType="Int NOT NULL")]
		public int SECTION_ID
		{
			get
			{
				return this._SECTION_ID;
			}
			set
			{
				if ((this._SECTION_ID != value))
				{
					this._SECTION_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECTION_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SECTION_NAME
		{
			get
			{
				return this._SECTION_NAME;
			}
			set
			{
				if ((this._SECTION_NAME != value))
				{
					this._SECTION_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_REGISTERED", DbType="Int NOT NULL")]
		public int TOTAL_REGISTERED
		{
			get
			{
				return this._TOTAL_REGISTERED;
			}
			set
			{
				if ((this._TOTAL_REGISTERED != value))
				{
					this._TOTAL_REGISTERED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLASSROOM_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CLASSROOM_NAME
		{
			get
			{
				return this._CLASSROOM_NAME;
			}
			set
			{
				if ((this._CLASSROOM_NAME != value))
				{
					this._CLASSROOM_NAME = value;
				}
			}
		}
	}
	
	public partial class StoredProcedureGetStudentInfoAboutSubjectsTakenByRutResult
	{
		
		private string _SUBJECT_NAME;
		
		private string _SECTION_NAME;
		
		private string _CLASSROOM_NAME;
		
		public StoredProcedureGetStudentInfoAboutSubjectsTakenByRutResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUBJECT_NAME
		{
			get
			{
				return this._SUBJECT_NAME;
			}
			set
			{
				if ((this._SUBJECT_NAME != value))
				{
					this._SUBJECT_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECTION_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SECTION_NAME
		{
			get
			{
				return this._SECTION_NAME;
			}
			set
			{
				if ((this._SECTION_NAME != value))
				{
					this._SECTION_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLASSROOM_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CLASSROOM_NAME
		{
			get
			{
				return this._CLASSROOM_NAME;
			}
			set
			{
				if ((this._CLASSROOM_NAME != value))
				{
					this._CLASSROOM_NAME = value;
				}
			}
		}
	}
	
	public partial class StoredProcedureGetSubjectsTakenByUserIdResult
	{
		
		private string _SUBJECT_NAME;
		
		private string _SECTION_NAME;
		
		private string _CLASSROOM_NAME;
		
		public StoredProcedureGetSubjectsTakenByUserIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SUBJECT_NAME
		{
			get
			{
				return this._SUBJECT_NAME;
			}
			set
			{
				if ((this._SUBJECT_NAME != value))
				{
					this._SUBJECT_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECTION_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SECTION_NAME
		{
			get
			{
				return this._SECTION_NAME;
			}
			set
			{
				if ((this._SECTION_NAME != value))
				{
					this._SECTION_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLASSROOM_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CLASSROOM_NAME
		{
			get
			{
				return this._CLASSROOM_NAME;
			}
			set
			{
				if ((this._CLASSROOM_NAME != value))
				{
					this._CLASSROOM_NAME = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
